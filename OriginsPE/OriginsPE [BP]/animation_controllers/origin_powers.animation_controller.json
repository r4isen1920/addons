{
  "format_version": "1.10.0",
  "animation_controllers": {
    "controller.animation.origin.traits.tailwind": {
      "states": {
        "on_detect": { "transitions": [ { "not_sneaking": "q.is_on_ground" } ],
          "on_exit": [
            "/effect @s speed 1 1 true"
          ]
        },
        "not_sneaking": {
          "transitions": [ { "on_detect": "q.is_on_ground" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.slow_falling": {
      "states": {
        "on_sneak": { "transitions": [ { "not_sneaking": "!q.is_sneaking && !q.is_on_ground" } ],
          "on_exit": [
            "/effect @s slow_falling 1 1 true"
          ]
        },
        "not_sneaking": {
          "transitions": [ { "on_sneak": "!q.is_sneaking && !q.is_on_ground" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.fresh_air": {
      "states": {
        "on_detect": { "transitions": [ { "on_sleep": "(q.is_sleeping && (q.position(1) < 86))" } ],
          "on_exit": [
            "/fill ~2~4~2~-2~-4~-2 air 0 replace bed -1",
            "/give @s bed 1",
            "/tellraw @s {\"rawtext\":[{\"text\":\"ยง7\"},{\"translate\":\"origins.trait.fresh_air.sleep_fail\"}]}"
          ]
        },
        "on_sleep": {
          "transitions": [ { "on_detect": "!q.is_sleeping" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.vegetarian": {
      "states": {
        "on_detect": { 
          "transitions": [
            { "on_eat_cooked_chicken":"(q.get_equipped_item_name == 'cooked_chicken' && q.is_using_item)" },
            { "on_eat_cooked_cod":"(q.get_equipped_item_name == 'cooked_cod' && q.is_using_item)" },
            { "on_eat_cooked_mutton":"(q.get_equipped_item_name == 'cooked_mutton' && q.is_using_item)" },
            { "on_eat_cooked_porkchop":"(q.get_equipped_item_name == 'cooked_porkchop' && q.is_using_item)" },
            { "on_eat_cooked_rabbit":"(q.get_equipped_item_name == 'cooked_rabbit' && q.is_using_item)" },
            { "on_eat_cooked_salmon":"(q.get_equipped_item_name == 'cooked_salmon' && q.is_using_item)" },
            { "on_eat_pufferfish":"(q.get_equipped_item_name == 'pufferfish' && q.is_using_item)" },
            { "on_eat_raw_beef":"(q.get_equipped_item_name == 'beef' && q.is_using_item)" },
            { "on_eat_raw_chicken":"(q.get_equipped_item_name == 'chicken' && q.is_using_item)" },
            { "on_eat_raw_cod":"(q.get_equipped_item_name == 'cod' && q.is_using_item)" },
            { "on_eat_raw_mutton":"(q.get_equipped_item_name == 'mutton' && q.is_using_item)" },
            { "on_eat_raw_porkchop":"(q.get_equipped_item_name == 'porkchop' && q.is_using_item)" },
            { "on_eat_raw_rabbit":"(q.get_equipped_item_name == 'rabbit' && q.is_using_item)" },
            { "on_eat_raw_salmon":"(q.get_equipped_item_name == 'salmon' && q.is_using_item)" },
            { "on_eat_rotten_flesh":"(q.get_equipped_item_name == 'rotten_flesh' && q.is_using_item)" },
            { "on_eat_spider_eye":"(q.get_equipped_item_name == 'spider_eye' && q.is_using_item)" },
            { "on_eat_steak":"(q.get_equipped_item_name == 'cooked_beef' && q.is_using_item)" },
            { "on_eat_tropical_fish":"(q.get_equipped_item_name == 'tropical_fish' && q.is_using_item)" }
          ],
          "on_exit": [
            "/effect @s[m=!c] poison 2 1 true",
            "/playsound enchant.thorns.hit @p[m=!c,r=9]",
            "/playsound random.pop @p[r=9]"
          ]
        },
        "on_eat_cooked_chicken":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s cooked_chicken 0 1","/structure load mystructure:cooked_chicken ^^1.5^1.4"]},
        "on_eat_cooked_cod":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s cooked_cod 0 1","/structure load mystructure:cooked_cod ^^1.5^1.4"]},
        "on_eat_cooked_mutton":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s cooked_mutton 0 1","/structure load mystructure:cooked_mutton ^^1.5^1.4"]},
        "on_eat_cooked_porkchop":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s cooked_porkchop 0 1","/structure load mystructure:cooked_porkchop ^^1.5^1.4"]},
        "on_eat_cooked_rabbit":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s cooked_rabbit 0 1","/structure load mystructure:cooked_rabbit ^^1.5^1.4"]},
        "on_eat_cooked_salmon":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s cooked_salmon 0 1","/structure load mystructure:cooked_salmon ^^1.5^1.4"]},
        "on_eat_pufferfish":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s pufferfish 0 1","/structure load mystructure:pufferfish ^^1.5^1.4"]},
        "on_eat_raw_beef":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s beef 0 1","/structure load mystructure:raw_beef ^^1.5^1.4"]},
        "on_eat_raw_chicken":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s chicken 0 1","/structure load mystructure:raw_chicken ^^1.5^1.4"]},
        "on_eat_raw_cod":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s cod 0 1","/structure load mystructure:raw_cod ^^1.5^1.4"]},
        "on_eat_raw_mutton":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s mutton 0 1","/structure load mystructure:raw_mutton ^^1.5^1.4"]},
        "on_eat_raw_porkchop":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s porkchop 0 1","/structure load mystructure:raw_porkchop ^^1.5^1.4"]},
        "on_eat_raw_rabbit":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s rabbit 0 1","/structure load mystructure:raw_rabbit ^^1.5^1.4"]},
        "on_eat_raw_salmon":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s salmon 0 1","/structure load mystructure:raw_salmon ^^1.5^1.4"]},
        "on_eat_rotten_flesh":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s rotten_flesh 0 1","/structure load mystructure:rotten_flesh ^^1.5^1.4"]},
        "on_eat_spider_eye":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s spider_eye 0 1","/structure load mystructure:spider_eye ^^1.5^1.4"]},
        "on_eat_steak":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s cooked_beef 0 1","/structure load mystructure:steak ^^1.5^1.4"]},
        "on_eat_tropical_fish":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s tropical_fish 0 1","/structure load mystructure:tropical_fish ^^1.5^1.4"]}
      }
    },
    
    "controller.animation.origin.traits.webbing": {
      "states": {
        "on_detect": { "transitions": [ { "runtime": "1" } ],
          "on_exit": [
            "/scoreboard players add @s[tag=\"trait_cd\"] traitCd 1",
            "/title @s[tag=\"trait_cd\",scores={traitCd=1}] actionbar webbing",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=131..}] remove trait_cd",
            "/scoreboard players reset @s[scores={traitCd=131..}] traitCd"
          ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.climbing": {
      "states": {
        "on_detect": { "transitions": [ { "runtime": "q.is_sneaking" } ],
          "on_exit": [
            "/tag @s[rx=50,rxm=-50] add climb_test",
            "/execute @s ~~~ detect ^^1^1 air 0 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 ladder -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 vine -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ~~~ ladder -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ~~~ vine -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 deadbush -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 tallgrass -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 sweet_berry_bush -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 red_flower -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 yellow_flower -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 seagrass -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 sea_pickle -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 kelp -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 flowing_water -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 water -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 flowing_lava -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 lava -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 bed -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 carpet -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 crimson_fungus -1 tag @s remove climb_test",
            "/execute @s ~~~ detect ^^1^1 warped_fungus -1 tag @s remove climb_test",
            
            "/effect @s[tag=\"climb_test\"] levitation 1 1 true",
            "/effect @s[tag=\"climb_test\"] slow_falling 2 1 true",
            "/tag @s remove climb_test"
          ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "q.is_sneaking" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.carnivore": {
      "states": {
        "on_detect": { 
          "transitions": [
              { "on_eat_apple":"(q.get_equipped_item_name == 'apple' && q.is_using_item)" },
              { "on_eat_baked_potato":"(q.get_equipped_item_name == 'baked_potato' && q.is_using_item)" },
              { "on_eat_beetroot":"(q.get_equipped_item_name == 'beetroot' && q.is_using_item)" },
              { "on_eat_beetroot_soup":"(q.get_equipped_item_name == 'beetroot_soup' && q.is_using_item)" },
              { "on_eat_bread":"(q.get_equipped_item_name == 'bread' && q.is_using_item)" },
              { "on_eat_carrot":"(q.get_equipped_item_name == 'carrot' && q.is_using_item)" },
              { "on_eat_chorus_fruit":"(q.get_equipped_item_name == 'chorus_fruit' && q.is_using_item)" },
              { "on_eat_cookie":"(q.get_equipped_item_name == 'cookie' && q.is_using_item)" },
              { "on_eat_dried_kelp":"(q.get_equipped_item_name == 'dried_kelp' && q.is_using_item)" },
              { "on_eat_enchanted_golden_apple":"(q.get_equipped_item_name == 'enchanted_golden_apple' && q.is_using_item)" },
              { "on_eat_glow_berries":"(q.get_equipped_item_name == 'glow_berries' && q.is_using_item)" },
              { "on_eat_golden_apple":"(q.get_equipped_item_name == 'golden_apple' && q.is_using_item)" },
              { "on_eat_golden_carrot":"(q.get_equipped_item_name == 'golden_carrot' && q.is_using_item)" },
              { "on_eat_melon_slice":"(q.get_equipped_item_name == 'melon_slice' && q.is_using_item)" },
              { "on_eat_mushroom_stew":"(q.get_equipped_item_name == 'mushroom_stew' && q.is_using_item)" },
              { "on_eat_poisonous_potato":"(q.get_equipped_item_name == 'poisonous_potato' && q.is_using_item)" },
              { "on_eat_potato":"(q.get_equipped_item_name == 'potato' && q.is_using_item)" },
              { "on_eat_pumpkin_pie":"(q.get_equipped_item_name == 'pumpkin_pie' && q.is_using_item)" },
              { "on_eat_sweet_berries":"(q.get_equipped_item_name == 'sweet_berries' && q.is_using_item)" }
            ],
          "on_exit": [
            "/effect @s[m=!c] poison 2 1 true",
            "/playsound enchant.thorns.hit @p[m=!c,r=9]",
            "/playsound random.pop @p[r=9]"
          ]
        },
        "on_eat_apple":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s apple 0 1","/structure load mystructure:apple ^^1.5^1.4"]},
        "on_eat_baked_potato":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s baked_potato 0 1","/structure load mystructure:baked_potato ^^1.5^1.4"]},
        "on_eat_beetroot":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s beetroot 0 1","/structure load mystructure:beetroot ^^1.5^1.4"]},
        "on_eat_beetroot_soup":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s beetroot_soup 0 1","/structure load mystructure:beetroot_soup ^^1.5^1.4"]},
        "on_eat_bread":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s bread 0 1","/structure load mystructure:bread ^^1.5^1.4"]},
        "on_eat_carrot":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s carrot 0 1","/structure load mystructure:carrot ^^1.5^1.4"]},
        "on_eat_chorus_fruit":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s chorus_fruit 0 1","/structure load mystructure:chorus_fruit ^^1.5^1.4"]},
        "on_eat_cookie":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s cookie 0 1","/structure load mystructure:cookie ^^1.5^1.4"]},
        "on_eat_dried_kelp":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s dried_kelp 0 1","/structure load mystructure:dried_kelp ^^1.5^1.4"]},
        "on_eat_enchanted_golden_apple":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s enchanted_golden_apple 0 1","/structure load mystructure:enchanted_golden_apple ^^1.5^1.4"]},
        "on_eat_glow_berries":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s glow_berries 0 1","/structure load mystructure:glow_berries ^^1.5^1.4"]},
        "on_eat_golden_apple":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s golden_apple 0 1","/structure load mystructure:golden_apple ^^1.5^1.4"]},
        "on_eat_golden_carrot":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s golden_carrot 0 1","/structure load mystructure:golden_carrot ^^1.5^1.4"]},
        "on_eat_melon_slice":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s melon_slice 0 1","/structure load mystructure:melon_slice ^^1.5^1.4"]},
        "on_eat_mushroom_stew":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s mushroom_stew 0 1","/structure load mystructure:mushroom_stew ^^1.5^1.4"]},
        "on_eat_poisonous_potato":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s poisonous_potato 0 1","/structure load mystructure:poisonous_potato ^^1.5^1.4"]},
        "on_eat_potato":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s potato 0 1","/structure load mystructure:potato ^^1.5^1.4"]},
        "on_eat_pumpkin_pie":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s pumpkin_pie 0 1","/structure load mystructure:pumpkin_pie ^^1.5^1.4"]},
        "on_eat_sweet_berries":{"transitions":[{"on_detect":"1"}],"on_entry":["/clear @s sweet_berries 0 1","/structure load mystructure:sweet_berries ^^1.5^1.4"]}
      }
    },
    
    "controller.animation.origin.traits.elytra": {
      "states": {
        "on_detect": { "transitions": [ { "runtime": "1" } ],
          "on_exit": [ "/replaceitem entity @s slot.armor.chest 0 elytra 1 0 {\"minecraft:item_lock\":{\"mode\":\"lock_in_slot\"},\"minecraft:keep_on_death\":{}}" ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.launch_into_air": {
      "states": {
        "on_detect": {
          "transitions": [ 
            { "runtime": "((!q.is_sneaking && q.is_on_ground) || (!q.is_sneaking && !q.is_on_ground) || (q.is_sneaking && q.is_on_ground))" },
            { "on_trigger": "(q.is_sneaking && !q.is_on_ground)" }
          ],
          "on_entry": [
            "/scoreboard players add @s[tag=\"trait_cd\"] traitCd 1",
            "/title @s[tag=\"trait_cd\",scores={traitCd=1}] actionbar elytra",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=301..}] remove trait_cd",
            "/scoreboard players reset @s[scores={traitCd=301..}] traitCd"
          ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ]
        },
        "on_trigger": {
          "transitions": [ { "on_detect": "1" } ],
          "on_entry": [
            "/effect @s[tag=!\"trait_cd\",tag=!\"heavy_armor\"] levitation 1 29 true",
            "/effect @s[tag=!\"trait_cd\",tag=\"heavy_armor\"] levitation 1 3 true",
            "/effect @s[tag=!\"trait_cd\"] slow_falling 3 255 true",
            "/execute @s[tag=!\"trait_cd\"] ~~~ particle origins:air_launch ~~~",
            "/execute @s[tag=!\"trait_cd\",tag=!\"heavy_armor\"] ~~~ playsound firework.launch @p[r=9]",
            "/execute @s[tag=!\"trait_cd\",tag=\"heavy_armor\"] ~~~ playsound random.fizz @p[r=9]",
            
            "/tag @s add trait_cd"
          ]
        }
      }
    },
    
    "controller.animation.origin.traits.aerial_combatant": {
      "states": {
        "on_detect": { "transitions": [ { "runtime": "q.is_gliding" } ],
          "on_exit": [
            "/execute @s ~~~ detect ~~-1~ air 0 effect @s[tag=!\"heavy_armor\"] strength 1 3 true"
          ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "q.is_gliding" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.claustrophobia": {
      "states": {
        "on_detect": { 
          "transitions": [ { "runtime": "1" } ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ],
          "on_entry": [
            "/scoreboard players add @s[tag=\"is_underground\"] claustrophobia 1",
            "/scoreboard players remove @s[tag=\"is_underground\",scores={claustrophobia=102..}] claustrophobia 1",
            "/scoreboard players remove @s[tag=!\"is_underground\",scores={claustrophobia=1..101}] claustrophobia 1",
            "/effect @s[scores={claustrophobia=101}] weakness 10 255 true",
            "/effect @s[scores={claustrophobia=101}] slowness 10 1 true",
            
            "/scoreboard players reset @s[tag=!\"is_underground\",scores={claustrophobia=..0}] claustrophobia"
          ]
        }
      }
    },
    
    "controller.animation.origin.traits.light_armor": {
      "states": {
        "on_detect": { 
          "transitions": [ { "runtime": "1" } ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ],
          "on_entry": [
            "/effect @s[tag=\"heavy_armor\"] slowness 1 3 true"
          ]
        }
      }
    },
    
    "controller.animation.origin.traits.conversion": {
      "states": {
        "on_detect": { "transitions": [ { "runtime": "1" } ],
          "on_exit": [
            "/scoreboard players add @s[tag=\"trait_cd\"] traitCd 1",
            "/title @s[tag=\"trait_cd\",scores={traitCd=1}] actionbar conversion",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=301..}] remove trait_cd",
            "/scoreboard players reset @s[scores={traitCd=301..}] traitCd"
          ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.strong_arms": {
      "states": {
        "on_detect": {
          "transitions": [ 
            { "no_tool": "q.get_equipped_item_name == ''" },
            { "has_tool": "q.get_equipped_item_name != ''" }
          ]
        },
        "no_tool": {
          "transitions": [ { "on_detect": "1" } ],
          "on_entry": [ 
            "/effect @s haste 1 1 true",
            "/effect @s strength 1 1 true"
          ]
        },
        "has_tool": {
          "transitions": [ { "on_detect": "1" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.heavy_shell": {
      "states": {
        "on_sneak": { "transitions": [ { "runtime": "1" } ],
          "on_exit": [
            "/effect @s slowness 1 1 true"
          ]
        },
        "runtime": {
          "transitions": [ { "on_sneak": "1" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.sprint_jump": {
      "states": {
        "on_detect": { "transitions": [ { "on_sprint": "q.is_sprinting" } ],
          "on_exit": [
            "/effect @s jump_boost 1 3 true"
          ]
        },
        "on_sprint": {
          "transitions": [ { "on_detect": "q.is_sprinting" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.cat_vision": {
      "states": {
        "on_detect": { "transitions": [ { "runtime": "1" } ],
          "on_exit": [
            "/effect @s[tag=\"cat_vision\"] night_vision 12 3 true",
            "/effect @s[tag=\"cat_vision\"] strength 1 1 true"
          ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.weak_arms": {
      "states": {
        "on_detect": {
          "transitions": [ 
            { "no_tool": "q.get_equipped_item_name == ''" },
            { "has_tool": "q.get_equipped_item_name != ''" }
          ]
        },
        "no_tool": {
          "transitions": [ { "on_detect": "1" } ],
          "on_entry": [
            "/effect @s[tag=\"weak_arms\"] mining_fatigue 1 1 true"
          ]
        },
        "has_tool": {
          "transitions": [ { "on_detect": "1" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.throw_ender_pearl": {
      "states": {
        "on_detect": {
          "transitions": [ 
            { "runtime": "((!q.is_sneaking || !v.attack_time || q.get_equipped_item_name != ''))" },
            { "on_trigger": "(q.is_sneaking && v.attack_time > 0.0 && q.get_equipped_item_name == '')" }
          ],
          "on_entry": [
            "/scoreboard players add @s[tag=\"trait_cd\"] traitCd 1",
            "/title @s[tag=\"trait_cd\",scores={traitCd=1}] actionbar teleportation",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=1..}] remove shoot_pearl",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=51..}] remove trait_cd",
            "/scoreboard players reset @s[scores={traitCd=51..}] traitCd",
            
            "/execute @e[type=origins:enderian_pearl] ~~~ particle origins:space_trail ~~~",
            "/particle minecraft:end_chest ~~0.2~"
          ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ]
        },
        "on_trigger": {
          "transitions": [ { "on_detect": "1" } ],
          "on_entry": [
            "/tag @s[tag=!\"trait_cd\"] add shoot_pearl",
            "/execute @s[tag=!\"trait_cd\"] ~~~ playsound mob.illusioner.teleport @p[r=9]",
            
            "/tag @s add trait_cd"
          ]
        }
      }
    },
    
    "controller.animation.origin.traits.pumpkin_hate": {
      "states": {
        "on_detect": { 
          "transitions": [
              { "on_eat_pumpkin_pie":"(q.get_equipped_item_name == 'pumpkin_pie' && q.is_using_item)" }
            ],
          "on_exit": [
            "/effect @s[m=!c] poison 2 1 true",
            "/playsound enchant.thorns.hit @p[m=!c,r=9]",
            "/playsound random.pop @p[r=9]"
          ]
        },
        "on_eat_pumpkin_pie": {
          "transitions": [ { "on_detect": "1" } ],
          "on_entry": [
            "/clear @s pumpkin_pie 0 1",
            "/structure load mystructure:pumpkin_pie ^^1.5^1.4"
          ]
        }
      }
    },
    
    "controller.animation.origin.traits.aqua_affinity": {
      "states": {
        "on_detect": { "transitions": [ { "on_wet": "q.is_in_water" } ],
          "on_exit": [
            "/effect @s conduit_power 9 1 true",
            "/effect @s speed 1 2 true"
          ]
        },
        "on_wet": {
          "transitions": [ { "on_detect": "q.is_in_water" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.nether_spawn": {
      "states": {
        "on_detect": { "transitions": [ { "runtime": "1" } ],
          "on_exit": [
            "/scoreboard players set @s[tag=\"nether_spawn\"] sunpower 3",
            "/tag @s[tag=\"nether_inhabitant\"] remove nether_spawn",
            
            "/scoreboard players add @s[tag=\"nether_spawn\"] netherspawn 1",
            "/gamemode s @s[m=c,tag=!\"in_creative\",tag=\"nether_spawn\",scores={netherspawn=1..120}]",
            "/execute @s[tag=\"nether_spawn\",scores={netherspawn=1..120}] ~~~ fill ~5~5~5~-5~-5~-5 air 0 replace obsidian",
            "/execute @s[tag=\"nether_spawn\",scores={netherspawn=1..120}] ~~~ fill ~5~5~5~-5~-5~-5 air 0 replace portal",
            "/spawnpoint @s[tag=\"nether_spawn\",scores={netherspawn=121..}]",
            "/tag @s[tag=\"nether_spawn\",scores={netherspawn=121..}] add nether_inhabitant",
            "/scoreboard players reset @s[tag=\"nether_inhabitant\"] netherspawn",
            "/tag @s[tag=\"nether_inhabitant\"] remove in_creative"
          ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ]
        }
      }
    },
    
    "controller.animation.origin.traits.fireball": {
      "states": {
        "on_detect": {
          "transitions": [ 
            { "runtime": "((!q.is_sneaking || !v.attack_time || q.get_equipped_item_name != ''))" },
            { "on_trigger": "(q.is_sneaking && v.attack_time > 0.0 && q.get_equipped_item_name == '')" }
          ],
          "on_entry": [
            "/scoreboard players add @s[tag=\"trait_cd\"] traitCd 1",
            "/title @s[tag=\"trait_cd\",scores={traitCd=1}] actionbar fireball",
            
            "/tag @s[tag=\"trait_cd\",scores={traitCd=1}] add shoot_fireball",
            "/execute @s[tag=\"trait_cd\",scores={traitCd=1}] ~~~ playsound mob.blaze.shoot @p[r=9]",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=2}] remove shoot_fireball",
            
            "/tag @s[tag=\"trait_cd\",scores={traitCd=5}] add shoot_fireball",
            "/execute @s[tag=\"trait_cd\",scores={traitCd=5}] ~~~ playsound mob.blaze.shoot @p[r=9]",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=6}] remove shoot_fireball",
            
            "/tag @s[tag=\"trait_cd\",scores={traitCd=10}] add shoot_fireball",
            "/execute @s[tag=\"trait_cd\",scores={traitCd=10}] ~~~ playsound mob.blaze.shoot @p[r=9]",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=11}] remove shoot_fireball",
            
            "/tag @s[tag=\"trait_cd\",scores={traitCd=15}] add shoot_fireball",
            "/execute @s[tag=\"trait_cd\",scores={traitCd=15}] ~~~ playsound mob.blaze.shoot @p[r=9]",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=16}] remove shoot_fireball",
            
            "/tag @s[tag=\"trait_cd\",scores={traitCd=166..}] remove trait_cd",
            "/scoreboard players reset @s[scores={traitCd=166..}] traitCd",
            
            "/execute @e[type=origins:blazeborn_fireball] ~~~ particle origins:flame_trail ~~~"
          ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ]
        },
        "on_trigger": {
          "transitions": [ { "on_detect": "1" } ],
          "on_entry": [
            "/tag @s add trait_cd"
          ]
        }
      }
    },
    
    "controller.animation.origin.traits.phantomized": {
      "states": {
        "on_detect": { 
          "transitions": [ 
            { "runtime": "!q.is_sneaking" },
            { "on_trigger": "q.is_sneaking" }
          ],
          "on_exit": [
            "/scoreboard players add @s[tag=\"trait_cd\"] traitCd 1",
            "/title @s[tag=\"trait_cd\",scores={traitCd=1}] actionbar dephantomize",
            "/execute @s[tag=\"trait_cd\",scores={traitCd=1}] ~~~ playsound mob.illusioner.teleport @p[r=9]",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=1..}] remove phantomized",
            "/tag @s[tag=\"trait_cd\",scores={traitCd=151..}] remove trait_cd",
            "/scoreboard players reset @s[scores={traitCd=151..}] traitCd",
            
            "/effect @s[tag=\"phantomized\"] invisibility 1 1 true",
            "/effect @s[tag=\"phantomized\"] hunger 5 1 true",
            
            "/tag @s[m=c] add in_creative",
            "/tag @s[m=!c] remove in_creative"
          ]
        },
        "runtime": {
          "transitions": [ { "on_detect": "1" } ],
          "on_entry": [
            "/title @s[scores={phantomized=1..}] actionbar hidecd",
            "/scoreboard players reset @s phantomized"
          ]
        },
        "on_trigger": {
          "transitions": [ 
            { "on_detect": "!v.attack_time" }, 
            { "on_untrigger": "v.attack_time > 0.0" }
          ],
          "on_entry": [ 
            "/scoreboard players add @s[tag=!\"trait_cd\",tag=!\"phantomized\"] phantomized 1",
            "/title @s[scores={phantomized=1}] actionbar phantomize",
            "/tag @s[scores={phantomized=51..}] add phantomized",
            "/effect @s[scores={phantomized=51..}] resistance 2 255 true",
            "/execute @s[scores={phantomized=51..}] ~~~ playsound mob.illusioner.teleport @p[r=9]",
            "/scoreboard players reset @s[scores={phantomized=51..}] phantomized"
          ]
        },
        "on_untrigger": {
          "transitions": [ { "on_detect": "1" } ],
          "on_entry": [
            "/tag @s[tag=\"phantomized\"] add trait_cd"
          ]
        }
      }
    }
  }
}